name: Build KioskLauncher APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2️⃣ Configurazione JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    # 3️⃣ Installazione Android SDK manuale
    - name: Install Android SDK
      run: |
        sudo mkdir -p /opt/android-sdk
        sudo chown $USER /opt/android-sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d /opt/android-sdk
        rm cmdline-tools.zip
        yes | /opt/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android-sdk "platform-tools" "platforms;android-34" "build-tools;34.0.0"

    # 4️⃣ Aggiungi SDK alla variabile PATH
    - name: Add SDK to PATH
      run: |
        echo "ANDROID_SDK_ROOT=/opt/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:/opt/android-sdk/platform-tools:/opt/android-sdk/cmdline-tools/bin" >> $GITHUB_ENV

    # 5️⃣ Rendi gradlew eseguibile
    - name: Make gradlew executable
      run: chmod +x ./gradlew

    # 6️⃣ Debug Java, PATH e Gradle
    - name: Debug Java and Gradle
      run: |
        java -version
        echo $PATH
        ./gradlew --version

    # 7️⃣ Cache Gradle
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper/
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # 8️⃣ Build APK debug
    - name: Build Debug APK
      run: ./gradlew assembleDebug

    # 9️⃣ Upload APK come artifact
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: KioskLauncher-APK
        path: app/build/outputs/apk/debug/app-debug.apk
